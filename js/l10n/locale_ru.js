/* This file is automatically generated on eonza.org.
   Use http://www.eonza.org/translate.html to edit or translate these text resources.
*/

var lng = {
	code: 'ru',
	native: 'Русский',
	accrights: 'Права доступа',
	accsettings: 'Настройки аккаунта',
	active: 'Активный',
	add: 'Добавить',
	admin: 'Администрирование',
	alias: 'Алиас',
	alignment: 'Выравнивание',
	allfiles: 'Всего файлов',
	allrecords: 'Все записи',
	and: 'И',
	apitoken: 'API ключ',
	apply: 'Применить',
	back: 'Назад',
	bigtext: 'Большой текст (>65000)',
	calcamount: 'Подсчитать общую сумму',
	calendar: 'Календарь',
	cancel: 'Отмена',
	card: 'Карточка',
	center: 'Центр',
	changefld: 'Сменить папку',
	clear: 'Очистить',
	close: 'Закрыть',
	column: 'Колонка',
	commentjs: 'Комментарий',
	confirm: 'Подтверждение',
	contains: 'Содержит',
	copysuf: 'копия',
	create: 'Создать',
	dashboard: 'Панель управления',
	day: 'День',
	dbconnect: 'Подключение к базе данных MySQL',
	dbname: 'База данных',
	dbver: 'Версия базы данных',
	decdouble: 'Двойной точности',
	decfloat: 'C плавающей точкой',
	del: 'Удалить',
	delattach: 'Вы действительно хотите удалить этот файл/картинку?',
	delchildren: 'Элемент содержит дочерние элементы. Вы хотите удалить всё?',
	deldb: 'Вы действительно хотите удалить таблицу #temp#?',
	delfield: 'Вы действительно хотите удалить это поле?',
	delfld: 'Вы действительно хотите удалить папку #temp#?',
	delitem: 'Вы действительно хотите удалить этот элемент?',
	delset: 'Вы действительно хотите удалить множество #temp#?',
	dropzone: 'Перетащите сюда ваши файлы',
	duplicate: 'Продублировать',
	edit: 'Редактировать',
	editfld: 'Изменение папки',
	edititem: 'Редактирование элемента',
	edittbl: 'Изменить таблицу',
	email: 'E-mail',
	empty: 'Пусто',
	endswith: 'Заканчивается на',
	eonzaver: 'Версия Eonza',
	error: 'Ошибка',
	err_alias: 'Недопустимый алиас #temp#.',
	err_connect: 'Невозможно соединиться с базой данных. Проверьте правильность всех параметров.',
	err_create: 'Ваши настройки MySQL запрещают создавать таблицы из PHP-скриптов. Зайдите в phpMyAdmin и импортируйте вручную созданный файл #temp#. После этого снова попробуйте начать установку.',
	err_createdir: 'Невозможно создать директорию в #temp#',
	err_dbbusy: 'Eonza уже установлена в базу данных #temp#!',
	err_dbexist: 'Таблица с именем #temp# уже существует.',
	err_dellink: 'На данную таблицу есть ссылка #temp#.',
	err_filesize: 'Превышен лимит размера [#temp#] загружаемого файла',
	err_id: 'Указан неверный параметр [#temp#].',
	err_limitset: 'Множество может содержать не более 32 элементов',
	err_login: 'Неверный логин или пароль пользователя',
	err_notempty: 'Вы можете удалить только пустую папку.',
	err_server: 'Ошибка сервера',
	err_system: 'Системная ошибка',
	err_write: 'Невозможно произвести сохранение файла в директорию #temp#! Установите для этой директории права на запись, а после установки восстановите прежнее значение прав доступа.',
	err_writefile: 'Невозможно произвести сохранение файла в директорию #temp#! Установите для этой директории права на запись.',
	existtbl: 'Имя существующей таблицы',
	export: 'Экспорт',
	export2set: 'Эскпортировать во множество',
	fcheck: 'Да/Нет',
	fdate: 'Дата',
	fdatetime: 'Дата, время',
	fdecimal: 'Десятичное число',
	fdtime: 'Дата и время',
	fenumset: 'Один из множества',
	ffile: 'Файлы/Документы',
	fhash: 'Хэш-значение',
	fileinfo: 'Информация о документе/изображении',
	filename: 'Имя файла',
	filter: 'Фильтр',
	fimage: 'Изображения',
	flinktable: 'Связь с таблицей',
	fnumber: 'Число',
	fsetset: 'Множество',
	fsfolder: 'Папка для хранилища файлов',
	fspecial: 'Специальный',
	fsql: 'SQL поле',
	fstext: 'Строка',
	ftext: 'Текст',
	height: 'Высота',
	help: 'Помощь',
	hierdata: 'Иерархические данные',
	hint: 'Подсказка',
	host: 'Хост',
	htmleditor: 'HTML редактор',
	iarights: 'Недостаточно прав доступа для осуществления операции.',
	imagelink: 'Ссылка на изображение',
	import: 'Импорт',
	importdata: 'Импортировать данные',
	indexes: 'Индексы',
	info: 'Бесплатная система с открытым исходным кодом для хранения и управления вашей информацией',
	inform: 'Информация',
	install: 'Установить',
	installing: 'Установка Eonza',
	ipv4: 'IPv4 адрес',
	itemadded: 'Запись успешно добавлена.',
	itemdel: 'Запись была успешно удалена',
	itemupdated: 'Запись успешно обновлена.',
	keeplog: 'Вести лог',
	languagejs: 'Язык',
	lastndays: 'Последние N дней',
	lastvisit: 'Последнее посещение',
	left: 'Влево',
	length: 'Длина',
	license: 'Распространяется по лицензии',
	link: 'Ссылка',
	listfields: 'Список полей',
	loading: 'Загрузка',
	loginjs: 'Войти',
	loginshort: 'Вход только по паролю',
	logname: 'Логин',
	logoutjs: 'Выход',
	longside: 'Большая сторона',
	mainside: 'Главная сторона',
	mask: 'Маска',
	maxsize: 'Максимальный размер',
	menu: 'Меню',
	minsize: 'Минимальный размер',
	month: 'Месяц',
	more: 'Конкретнее',
	moreoptions: 'Дополнительные опции',
	name: 'Наименование',
	newfld: 'Новая папка',
	newitem: 'Добавить запись',
	newtbl: 'Новая таблица',
	next: 'Следующая',
	no: 'Нет',
	nosel: 'Нет отмеченных записей!',
	not: 'НЕ',
	now: 'Сейчас',
	numrec: 'Количество записей',
	ok: 'OK',
	open: 'Открыть',
	or: 'ИЛИ',
	owner: 'Создано и поддерживается ООО "Новострим',
	ownrecords: 'Только свои записи',
	parent: 'Родитель',
	password: 'Пароль',
	perpage: 'Строк на страницу',
	phone: 'Телефон',
	phpver: 'Версия PHP',
	prev: 'Предыдущая',
	range: 'Диапазон',
	ratio: 'Отношение сторон',
	read: 'Читать',
	refresh: 'Обновить',
	right: 'Вправо',
	rootfolder: 'Корневая папка',
	savejs: 'Сохранить',
	set: 'Множество',
	sets: 'Множества',
	settings: 'Настройки',
	showalias: 'Показывать алиас',
	showaslink: 'Показывать как ссылку',
	showhelp: 'Показывать кнопки Помощь',
	showid: 'Показывать идентификатор',
	signinjs: 'Вход в систему',
	signupjs: 'Регистрация',
	size: 'Размер',
	sourcetbl: 'Исходная таблица',
	spreadsheet: 'Таблица',
	startswith: 'Начинается с',
	storedb: 'Хранить в базе данных',
	sure: 'Вы уверены, что хотите произвести следующее действие: #temp#?',
	systeminfo: 'Системная информация',
	table: 'Таблица',
	tables: 'Таблицы',
	tblimport: 'Импорт таблицы',
	thismonth: 'Этот месяц',
	thisweek: 'Эта неделя',
	thumbimage: 'Превью',
	thumbsize: 'Размер превью',
	timenow: 'Текущее время если пусто',
	titlejs: 'Заголовок',
	today: 'Сегодня',
	tomorrow: 'Завтра',
	truncate: 'Очистить',
	truncatedb: 'Вы действительно хотите очистить таблицу #temp#?',
	type: 'Тип',
	updpass: 'Пароль был успешно изменен.',
	user: 'Имя пользователя',
	username: 'Имя пользователя',
	users: 'Пользователи',
	usrgroups: 'Группы пользователей',
	view: 'Просмотр',
	visiblecol: 'Видимая колонка',
	warning: 'Предупреждение',
	war_efield: 'Добавьте хотя бы одно поле!',
	war_efilter: 'Укажите поле #temp#!',
	war_ename: 'Наименование не должно быть пустым!',
	website: 'Вебсайт',
	weditor: 'WYSIWYG редактор',
	week: 'Неделя',
	width: 'Ширина',
	withsel: 'C отмеченными',
	year: 'Год',
	yes: 'Да',
	yesterday: 'Вчера',
	yourip: 'Ваш IP-адрес',
	zero: 'Ноль',

};
// moment.js locale configuration
// locale : russian (ru)
// author : Viktorminator : https://github.com/Viktorminator
// Author : Menelion Elensúle : https://github.com/Oire

(function (factory) {
    factory(moment);
}(function (moment) {
    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }

    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    function monthsCaseReplace(m, format) {
        var months = {
            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')
        },

        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
            'accusative' :
            'nominative';

        return months[nounCase][m.month()];
    }

    function monthsShortCaseReplace(m, format) {
        var monthsShort = {
            'nominative': 'янв_фев_мар_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')
        },

        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
            'accusative' :
            'nominative';

        return monthsShort[nounCase][m.month()];
    }

    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')
        },

        nounCase = (/\[ ?[Вв] ?(?:прошлую|следующую)? ?\] ?dddd/).test(format) ?
            'accusative' :
            'nominative';

        return weekdays[nounCase][m.day()];
    }

    return moment.defineLocale('ru', {
        months : monthsCaseReplace,
        monthsShort : monthsShortCaseReplace,
        weekdays : weekdaysCaseReplace,
        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],
        longDateFormat : {
            LT : 'HH:mm',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., LT',
            LLLL : 'dddd, D MMMM YYYY г., LT'
        },
/*        calendar : {
            sameDay: '[Сегодня в] LT',
            nextDay: '[Завтра в] LT',
            lastDay: '[Вчера в] LT',
            nextWeek: function () {
                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                case 0:
                    return '[В прошлое] dddd [в] LT';
                case 1:
                case 2:
                case 4:
                    return '[В прошлый] dddd [в] LT';
                case 3:
                case 5:
                case 6:
                    return '[В прошлую] dddd [в] LT';
                }
            },
            sameElse: 'L'
        },*/
        calendar : {
            sameDay: '[Сегодня]',
            nextDay: '[Завтра]',
            lastDay: '[Вчера]',
            nextWeek: function () {
                return this.day() === 2 ? '[Во] dddd' : '[В] dddd';
            },
            lastWeek: function () {
                switch (this.day()) {
                case 0:
                    return '[В прошлое] dddd';
                case 1:
                case 2:
                case 4:
                    return '[В прошлый] dddd';
                case 3:
                case 5:
                case 6:
                    return '[В прошлую] dddd';
                }
            },
            sameElse: 'L'
        },        
        relativeTime : {
            future : 'через %s',
            past : '%s назад',
            s : 'несколько секунд',
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'час',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },

        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM : function (input) {
            return /^(дня|вечера)$/.test(input);
        },

        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },

        ordinal: function (number, period) {
            switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
                return number + '-й';
            case 'D':
                return number + '-го';
            case 'w':
            case 'W':
                return number + '-я';
            default:
                return number;
            }
        },

        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });
}));